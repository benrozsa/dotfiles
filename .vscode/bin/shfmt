#!/usr/bin/env bash

# Portable shfmt wrapper for VS Code (mkhl.shfmt)
# - Works on macOS (Homebrew), Linux (Fedora), and Flatpak VS Code

set -euo pipefail

# Sanitize args: some VS Code setups/extensions pass flags not supported by shfmt.
# Drop unknown flags like '-apply-ignore'/'--apply-ignore' to avoid failing.
SANITIZED=()
for a in "$@"; do
  case "$a" in
  -apply-ignore | --apply-ignore)
    # ignore this flag
    ;;
  *)
    SANITIZED+=("$a")
    ;;
  esac
done
set -- "${SANITIZED[@]}"

# Prefer host shfmt only when actually inside Flatpak
if [ -f "/.flatpak-info" ] || [ -n "${FLATPAK_ID:-}" ]; then
  if command -v flatpak-spawn >/dev/null 2>&1; then
    if flatpak-spawn --host shfmt -version >/dev/null 2>&1; then
      exec flatpak-spawn --host shfmt "$@"
    fi
  fi
fi

# PATH
if command -v shfmt >/dev/null 2>&1; then
  exec "$(command -v shfmt)" "$@"
fi

# Go install location (e.g., `go install mvdan.cc/sh/v3/cmd/shfmt@latest`)
if command -v go >/dev/null 2>&1; then
  GOPATH_DIR="${GOPATH:-$(go env GOPATH 2>/dev/null || echo "$HOME/go") }"
  GOPATH_DIR="${GOPATH_DIR%/}"
  if [ -x "$GOPATH_DIR/bin/shfmt" ]; then
    exec "$GOPATH_DIR/bin/shfmt" "$@"
  fi
fi

# Homebrew installs (try specific formula prefix first)
if command -v brew >/dev/null 2>&1; then
  if SHFMT_PREFIX=$(brew --prefix shfmt 2>/dev/null); then
    if [ -x "$SHFMT_PREFIX/bin/shfmt" ]; then
      exec "$SHFMT_PREFIX/bin/shfmt" "$@"
    fi
  fi
  BREW_PREFIX=$(brew --prefix 2>/dev/null || true)
  for candidate in \
    "$BREW_PREFIX/bin/shfmt" \
    "/opt/homebrew/bin/shfmt" \
    "/usr/local/bin/shfmt"; do
    if [ -x "$candidate" ]; then
      exec "$candidate" "$@"
    fi
  done
fi

# Common Linux locations
for candidate in /usr/bin/shfmt /usr/local/bin/shfmt; do
  [ -x "$candidate" ] && exec "$candidate" "$@"
done

echo "shfmt not found. Install via 'brew install shfmt' (macOS), 'sudo dnf install shfmt' (Fedora), or 'go install mvdan.cc/sh/v3/cmd/shfmt@latest'. Ensure VS Code can access it." >&2
exit 127
